<?xml version="1.0"?>
<ruleset name="SymfonyCustom">
    <!-- See http://symfony.com/doc/current/contributing/code/standards.html -->
    <description>The SymfonyCustom coding standard.</description>

    <arg name="extensions" value="php,inc"/>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <!-- ************** -->
    <!-- ***  PSR12  *** -->
    <!-- ************** -->

    <!-- Include the PSR-12 (so PSR-1) standard without the file length limit -->
    <rule ref="PSR12">
        <exclude name="Generic.Files.LineLength"/>
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing"/>
        <exclude name="PSR12.Operators.OperatorSpacing"/>
    </rule>
    <!-- Instead of PSR12.ControlStructures.ControlStructureSpacing -->
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <!-- Instead of PSR12.Operators.OperatorSpacing-->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>

    <!-- Change warning to error -->
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed">
        <type>error</type>
    </rule>

    <!-- Override SuperfluousWhitespace to not ignore blank lines -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>

    <!-- Override ScopeIndent to check phpDoc comments indent-->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT"/>
            </property>
        </properties>
    </rule>

    <!-- ************** -->
    <!-- ***  MORE  *** -->
    <!-- ************** -->

    <!-- Whitespace -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0" />
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacingBeforeFirst" value="0"/>
            <property name="spacing" value="1"/>
            <property name="spacingAfterLast" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacingBeforeFirst" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>

    <!-- Disallow -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.CodeAnalysis.AssignmentInCondition">
        <type>error</type>
    </rule>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement">
        <type>error</type>
    </rule>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.NonExecutableCode">
        <type>error</type>
    </rule>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>

    <!-- Others -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Commenting.DocCommentAlignment">
        <exclude name="Squiz.Commenting.DocCommentAlignment.SpaceAfterStar"/>
    </rule>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
        <exclude name="Squiz.NamingConventions.ValidVariableName.ContainsNumbers"/>
    </rule>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
    </rule>
    <rule ref="Squiz.Strings.EchoedStrings"/>

    <!-- Custom -->
    <rule ref="SymfonyCustom.Commenting.FunctionComment">
        <exclude name="SymfonyCustom.Commenting.FunctionComment.MissingParamComment"/>
    </rule>
</ruleset>
